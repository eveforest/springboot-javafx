<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>kim</artifactId>
        <groupId>com.kingyea</groupId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>kim-ui</artifactId>
    <version>0.0.1</version>
    <packaging>jar</packaging>

    <dependencies>
        <!-- modules -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>kim-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>kim-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- springboot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>${springboot.version}</version>
        </dependency>
        <dependency>
            <groupId>de.roskenet</groupId>
            <artifactId>springboot-javafx-support</artifactId>
            <version>${springboot-javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>de.roskenet</groupId>
            <artifactId>springboot-javafx-test</artifactId>
            <version>${springboot-javafx-test.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- fx ui -->
        <dependency>
            <groupId>de.jensd</groupId>
            <artifactId>fontawesomefx</artifactId>
            <version>${fontawesomefx.version}</version>
        </dependency>
        <!-- 引入jxbrowser -->
        <dependency>
            <groupId>com.javafx.jxbrowser</groupId>
            <artifactId>jxbrowser</artifactId>
            <version>${jxbrowser.version}</version>
            <scope>system</scope> <!--system，类似provided，需要显式提供依赖的jar以后，Maven就不会在Repository中查找它-->
            <systemPath>${basedir}/lib/jxbrowser-6.16.jar</systemPath> <!--项目根目录下的lib文件夹下-->
        </dependency>
        <dependency>
            <groupId>com.javafx.jxbrowser</groupId>
            <artifactId>jxbrowser-linux64</artifactId>
            <version>${jxbrowser.version}</version>
            <scope>system</scope> <!--system，类似provided，需要显式提供依赖的jar以后，Maven就不会在Repository中查找它-->
            <systemPath>${basedir}/lib/jxbrowser-linux64-6.16.jar</systemPath> <!--项目根目录下的lib文件夹下-->
        </dependency>
        <dependency>
            <groupId>com.javafx.jxbrowser</groupId>
            <artifactId>jxbrowser-mac</artifactId>
            <version>${jxbrowser.version}</version>
            <scope>system</scope> <!--system，类似provided，需要显式提供依赖的jar以后，Maven就不会在Repository中查找它-->
            <systemPath>${basedir}/lib/jxbrowser-mac-6.16.jar</systemPath> <!--项目根目录下的lib文件夹下-->
        </dependency>
        <dependency>
            <groupId>com.javafx.jxbrowser</groupId>
            <artifactId>jxbrowser-win32</artifactId>
            <version>${jxbrowser.version}</version>
            <scope>system</scope> <!--system，类似provided，需要显式提供依赖的jar以后，Maven就不会在Repository中查找它-->
            <systemPath>${basedir}/lib/jxbrowser-win32-6.16.jar</systemPath> <!--项目根目录下的lib文件夹下-->
        </dependency>
        <!-- util -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
    </dependencies>


</project>